{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useMutation } from \"@tanstack/react-query\";\nimport { postUser } from \"../api/users\";\nimport successToast from \"../toast/customToast\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useSetUserLoginStatus } from \"./useSetUserLoginStatus\";\nexport default function useSignup() {\n  _s();\n  const navigate = useNavigate();\n  const {\n    setIsRegistered,\n    setAccessToken\n  } = useSetUserLoginStatus();\n  const mutation = useMutation(postUser, {\n    onSuccess: data => {\n      localStorage.setItem(\"refresh_token\", data.refreshToken);\n      setAccessToken(data.accessToken);\n      setIsRegistered(true);\n      navigate(\"/\");\n    },\n    onError: data => {\n      console.log('it will be all right');\n      successToast(data);\n    }\n  });\n  return {\n    mutation\n  };\n}\n_s(useSignup, \"z+sBWNyQCjv2VazRG4UsyevE1is=\", false, function () {\n  return [useNavigate, useSetUserLoginStatus, useMutation];\n});","map":{"version":3,"names":["useMutation","postUser","successToast","useNavigate","useSetUserLoginStatus","useSignup","_s","navigate","setIsRegistered","setAccessToken","mutation","onSuccess","data","localStorage","setItem","refreshToken","accessToken","onError","console","log"],"sources":["C:/Users/Iman/Downloads/Reposetories/Aiport-Backend-WebDev-HW2-3/Front/src/hooks/useSignup.js"],"sourcesContent":["import {useMutation} from \"@tanstack/react-query\";\r\nimport {postUser} from \"../api/users\";\r\nimport successToast from \"../toast/customToast\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport {useSetUserLoginStatus} from \"./useSetUserLoginStatus\";\r\n\r\nexport default function useSignup() {\r\n    const navigate = useNavigate();\r\n    const {setIsRegistered, setAccessToken} = useSetUserLoginStatus()\r\n\r\n    const mutation = useMutation(\r\n         postUser,\r\n        {\r\n            onSuccess: (data) => {\r\n                localStorage.setItem(\"refresh_token\", data.refreshToken)\r\n                setAccessToken(data.accessToken)\r\n                setIsRegistered(true);\r\n                navigate(\"/\");\r\n            },\r\n            onError: (data) => {\r\n                console.log('it will be all right')\r\n                successToast(data);\r\n            },\r\n        });\r\n    return {mutation};\r\n}"],"mappings":";AAAA,SAAQA,WAAW,QAAO,uBAAuB;AACjD,SAAQC,QAAQ,QAAO,cAAc;AACrC,OAAOC,YAAY,MAAM,sBAAsB;AAC/C,SAAQC,WAAW,QAAO,kBAAkB;AAC5C,SAAQC,qBAAqB,QAAO,yBAAyB;AAE7D,eAAe,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EAChC,MAAMC,QAAQ,GAAGJ,WAAW,EAAE;EAC9B,MAAM;IAACK,eAAe;IAAEC;EAAc,CAAC,GAAGL,qBAAqB,EAAE;EAEjE,MAAMM,QAAQ,GAAGV,WAAW,CACvBC,QAAQ,EACT;IACIU,SAAS,EAAGC,IAAI,IAAK;MACjBC,YAAY,CAACC,OAAO,CAAC,eAAe,EAAEF,IAAI,CAACG,YAAY,CAAC;MACxDN,cAAc,CAACG,IAAI,CAACI,WAAW,CAAC;MAChCR,eAAe,CAAC,IAAI,CAAC;MACrBD,QAAQ,CAAC,GAAG,CAAC;IACjB,CAAC;IACDU,OAAO,EAAGL,IAAI,IAAK;MACfM,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC;MACnCjB,YAAY,CAACU,IAAI,CAAC;IACtB;EACJ,CAAC,CAAC;EACN,OAAO;IAACF;EAAQ,CAAC;AACrB;AAACJ,EAAA,CAnBuBD,SAAS;EAAA,QACZF,WAAW,EACcC,qBAAqB,EAE9CJ,WAAW;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}