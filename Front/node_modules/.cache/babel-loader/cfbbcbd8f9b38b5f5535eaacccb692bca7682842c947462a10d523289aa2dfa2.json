{"ast":null,"code":"import { authApi, ticketApi } from \"./axios\";\nexport async function handleAuthRequests(_ref) {\n  let {\n    url,\n    method,\n    data,\n    headers\n  } = _ref;\n  switch (method) {\n    case 'GET':\n      return await authApi.get(url, {\n        headers\n      });\n    case 'POST':\n      return await authApi.post(url, data, {\n        headers\n      });\n    case 'PUT':\n      return await authApi.put(url, data, {\n        headers\n      });\n    default:\n      return Error('Method not supported');\n  }\n}\nexport async function handelTicketRequests(_ref2) {\n  let {\n    url,\n    method,\n    data,\n    headers\n  } = _ref2;\n  switch (method) {\n    case 'GET':\n      return await ticketApi.get(url, {\n        headers\n      });\n    case 'POST':\n      return await ticketApi.post(url, data, {\n        headers\n      });\n    case 'PUT':\n      return await ticketApi.put(url, data, {\n        headers\n      });\n    default:\n      return Error('Method not supported');\n  }\n}","map":{"version":3,"names":["authApi","ticketApi","handleAuthRequests","_ref","url","method","data","headers","get","post","put","Error","handelTicketRequests","_ref2"],"sources":["C:/Users/Iman/Downloads/Reposetories/Aiport-Backend-WebDev-HW2-3/Front/src/api/handleAuthRequests.js"],"sourcesContent":["import {authApi, ticketApi} from \"./axios\";\r\n\r\nexport async function handleAuthRequests({url, method, data, headers}) {\r\n    switch (method){\r\n        case 'GET':\r\n            return await authApi.get(url, {headers})\r\n        case 'POST':\r\n            return await authApi.post(url, data, {headers})\r\n        case 'PUT':\r\n            return await authApi.put(url, data, {headers})\r\n        default:\r\n            return Error('Method not supported')\r\n    }\r\n}\r\n\r\nexport async function handelTicketRequests({url, method, data, headers}) {\r\n    switch (method){\r\n        case 'GET':\r\n            return await ticketApi.get(url, {headers})\r\n        case 'POST':\r\n            return await ticketApi.post(url, data, {headers})\r\n        case 'PUT':\r\n            return await ticketApi.put(url, data, {headers})\r\n        default:\r\n            return Error('Method not supported')\r\n    }\r\n}"],"mappings":"AAAA,SAAQA,OAAO,EAAEC,SAAS,QAAO,SAAS;AAE1C,OAAO,eAAeC,kBAAkBA,CAAAC,IAAA,EAA+B;EAAA,IAA9B;IAACC,GAAG;IAAEC,MAAM;IAAEC,IAAI;IAAEC;EAAO,CAAC,GAAAJ,IAAA;EACjE,QAAQE,MAAM;IACV,KAAK,KAAK;MACN,OAAO,MAAML,OAAO,CAACQ,GAAG,CAACJ,GAAG,EAAE;QAACG;MAAO,CAAC,CAAC;IAC5C,KAAK,MAAM;MACP,OAAO,MAAMP,OAAO,CAACS,IAAI,CAACL,GAAG,EAAEE,IAAI,EAAE;QAACC;MAAO,CAAC,CAAC;IACnD,KAAK,KAAK;MACN,OAAO,MAAMP,OAAO,CAACU,GAAG,CAACN,GAAG,EAAEE,IAAI,EAAE;QAACC;MAAO,CAAC,CAAC;IAClD;MACI,OAAOI,KAAK,CAAC,sBAAsB,CAAC;EAAA;AAEhD;AAEA,OAAO,eAAeC,oBAAoBA,CAAAC,KAAA,EAA+B;EAAA,IAA9B;IAACT,GAAG;IAAEC,MAAM;IAAEC,IAAI;IAAEC;EAAO,CAAC,GAAAM,KAAA;EACnE,QAAQR,MAAM;IACV,KAAK,KAAK;MACN,OAAO,MAAMJ,SAAS,CAACO,GAAG,CAACJ,GAAG,EAAE;QAACG;MAAO,CAAC,CAAC;IAC9C,KAAK,MAAM;MACP,OAAO,MAAMN,SAAS,CAACQ,IAAI,CAACL,GAAG,EAAEE,IAAI,EAAE;QAACC;MAAO,CAAC,CAAC;IACrD,KAAK,KAAK;MACN,OAAO,MAAMN,SAAS,CAACS,GAAG,CAACN,GAAG,EAAEE,IAAI,EAAE;QAACC;MAAO,CAAC,CAAC;IACpD;MACI,OAAOI,KAAK,CAAC,sBAAsB,CAAC;EAAA;AAEhD"},"metadata":{},"sourceType":"module","externalDependencies":[]}