{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useMutation } from \"@tanstack/react-query\";\nimport { postUser } from \"../api/users\";\nimport successToast from \"../toast/customToast\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useSetUserLoginStatus } from \"./useSetUserLoginStatus\";\nexport default function useSignup() {\n  _s();\n  const navigate = useNavigate();\n  // const {setIsRegistered, setAccessToken} = useSetUserLoginStatus()\n\n  const mutation = useMutation(postUser, {\n    onSuccess: data => {\n      // localStorage.setItem(\"refresh_token\", data.refreshToken)\n      // setAccessToken(data.accessToken)\n      // setIsRegistered(true);\n      navigate(\"/login\");\n    },\n    onError: data => {\n      console.log('it will be all right');\n      successToast(data);\n    }\n  });\n  return {\n    mutation\n  };\n}\n_s(useSignup, \"F/AJWDsIA6fViVldNL8Okg3D3ZM=\", false, function () {\n  return [useNavigate, useMutation];\n});","map":{"version":3,"names":["useMutation","postUser","successToast","useNavigate","useSetUserLoginStatus","useSignup","_s","navigate","mutation","onSuccess","data","onError","console","log"],"sources":["C:/Users/Iman/Downloads/Reposetories/Aiport-Backend-WebDev-HW2-3/Front/src/hooks/useSignup.js"],"sourcesContent":["import {useMutation} from \"@tanstack/react-query\";\r\nimport {postUser} from \"../api/users\";\r\nimport successToast from \"../toast/customToast\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport {useSetUserLoginStatus} from \"./useSetUserLoginStatus\";\r\n\r\nexport default function useSignup() {\r\n    const navigate = useNavigate();\r\n    // const {setIsRegistered, setAccessToken} = useSetUserLoginStatus()\r\n\r\n    const mutation = useMutation(\r\n         postUser,\r\n        {\r\n            onSuccess: (data) => {\r\n                // localStorage.setItem(\"refresh_token\", data.refreshToken)\r\n                // setAccessToken(data.accessToken)\r\n                // setIsRegistered(true);\r\n                navigate(\"/login\");\r\n            },\r\n            onError: (data) => {\r\n                console.log('it will be all right')\r\n                successToast(data);\r\n            },\r\n        });\r\n    return {mutation};\r\n}"],"mappings":";AAAA,SAAQA,WAAW,QAAO,uBAAuB;AACjD,SAAQC,QAAQ,QAAO,cAAc;AACrC,OAAOC,YAAY,MAAM,sBAAsB;AAC/C,SAAQC,WAAW,QAAO,kBAAkB;AAC5C,SAAQC,qBAAqB,QAAO,yBAAyB;AAE7D,eAAe,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EAChC,MAAMC,QAAQ,GAAGJ,WAAW,EAAE;EAC9B;;EAEA,MAAMK,QAAQ,GAAGR,WAAW,CACvBC,QAAQ,EACT;IACIQ,SAAS,EAAGC,IAAI,IAAK;MACjB;MACA;MACA;MACAH,QAAQ,CAAC,QAAQ,CAAC;IACtB,CAAC;IACDI,OAAO,EAAGD,IAAI,IAAK;MACfE,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC;MACnCX,YAAY,CAACQ,IAAI,CAAC;IACtB;EACJ,CAAC,CAAC;EACN,OAAO;IAACF;EAAQ,CAAC;AACrB;AAACF,EAAA,CAnBuBD,SAAS;EAAA,QACZF,WAAW,EAGXH,WAAW;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}